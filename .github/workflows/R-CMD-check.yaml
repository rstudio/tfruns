on:
  push:
    branches:
      - main
  pull_request:
  # schedule:
  #   - cron: '0 1 * * *'

name: R-CMD-check

jobs:
  R-CMD-check:
    strategy:
      fail-fast: false
      matrix:
        os: ['windows-latest', 'macOS-latest', 'ubuntu-latest']
        # include:
        #   - os: ubuntu-18.04
        #     cran: https://demo.rstudiopm.com/all/__linux__/focal/latest


    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }}
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      PIP_NO_WARN_SCRIPT_LOCATION: false
      RETICULATE_AUTOCONFIGURE: 'FALSE'
      CRAN: ${{ matrix.cran }}


    steps:
      - uses: actions/checkout@v3

      - uses: r-lib/actions/setup-r@v2

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: rcmdcheck remotes reticulate

      # - name: Install system dependencies
      #   if: runner.os == 'Linux'
      #   shell: bash
      #   run: |
      #     . /etc/os-release
      #     while read -r cmd
      #     do
      #       echo "$cmd"
      #       sudo $cmd
      #     done < <(Rscript -e "writeLines(remotes::system_requirements('$ID-$VERSION_ID'))")

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: setup r-reticulate venv
        shell: Rscript {0}
        run: |
          remotes::install_local()
          library(reticulate)
          virtualenv_create("r-reticulate", Sys.which("python"),
            packages = c(
              "tensorflow-cpu"
          ))
          python <- reticulate::virtualenv_python("r-reticulate")
          writeLines(sprintf("RETICULATE_PYTHON=%s", python),
                     Sys.getenv("GITHUB_ENV"))

      - name: Check
        continue-on-error: ${{ contains(matrix.allow_failure, 'true') }}
        run: Rscript -e "rcmdcheck::rcmdcheck(args = '--no-manual', error_on = 'warning', check_dir = 'check')"
